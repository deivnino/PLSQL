create or replace PROCEDURE PRC_CARGAR_DATOS_SIBO_DINAMIC(P_NOMBRE_TABLA_STAGE     IN VARCHAR2, 
                                    P_NOMBRE_TABLA_DATOS      IN VARCHAR2, 
                                    P_CADENA_CURSOR__INSERTAR IN VARCHAR2, 
                                    P_TIPOARCHIVO             IN INTEGER,  
                                    P_SEC_ID_TABLA_DE_NEGOCIO IN VARCHAR2, 
                                    P_ID_RESUMEN              OUT INTEGER) 
/*****************************************************************************
APLICACION:           SIBO DAVIPLATA
NOMBRE:               PRC_CARGUE_ARCHIVOS
PROPOSITO:            Procedimiento encargado cargar los datos a SIBO.
PARAMETROS:
ENTRADA:              Nimguno
SALIDA:               Ninguno
DISEÑADO POR:         ASESOFTWARE
DESARROLLADO POR:     ALFONSO PIMIENTA
REVISIONES:
Versión      Fecha         Autor                               Descripción
---------    ----------    --------------------------------    --------------
1.0          2016-12-14    Alfonso Pimienta Trujillo           Creación Procedimiento.
******************************************************************************/

IS
TABLA_ORIGEN                            VARCHAR2(30);
TABLA_DESTINO                           VARCHAR2(30);
CADENA_CURSOR__INSERTAR                 VARCHAR2(4000);
CADENA_INSERTAR                         VARCHAR2(4000);
SQL_DINAMICO_INSERT                     VARCHAR2(4000);
SQL_DINAMICO_SELECT                     VARCHAR2(4000);
SEC_ID_TABLA_DE_NEGOCIO                 VARCHAR2(30);

TIPO_ARCHIVO                            INTEGER;
SEC_RESUMEN_CARGUE                      INTEGER;
SEC_NUMERO_CARGUE_DIARIO                INTEGER;
SEC_TABLA_FINAL                         INTEGER;

TYPE REF_CUR                            IS REF CURSOR;
CUR_STAGE                               REF_CUR;
TIPO_RECORD                             PRELIQ_MFEA%ROWTYPE;

--EXCEPCIONES
MISSING_EXPRESSION EXCEPTION;
PRAGMA EXCEPTION_INIT(MISSING_EXPRESSION, -00936);

      BEGIN

    TABLA_ORIGEN                        := P_NOMBRE_TABLA_STAGE;
    TABLA_DESTINO                       := P_NOMBRE_TABLA_DATOS;
    CADENA_CURSOR__INSERTAR             := P_CADENA_CURSOR__INSERTAR;
    TIPO_ARCHIVO                        := P_TIPOARCHIVO;
    SEC_ID_TABLA_DE_NEGOCIO             := P_SEC_ID_TABLA_DE_NEGOCIO;

    SELECT SEQ_RESUMEN_CARGUE.NEXTVAL INTO SEC_RESUMEN_CARGUE FROM DUAL;
    SELECT SEQ_NUMERO_CARGUE_DIARIO.NEXTVAL INTO SEC_NUMERO_CARGUE_DIARIO FROM DUAL;

        P_ID_RESUMEN                        := SEC_RESUMEN_CARGUE;

    BEGIN

      SQL_DINAMICO_INSERT               := SQL_DINAMICO_INSERT || 'INSERT INTO RESUMEN_CARGUE  VALUES' || CHR(10);
      SQL_DINAMICO_INSERT               := SQL_DINAMICO_INSERT || '(' || SEC_RESUMEN_CARGUE|| ',' || TIPO_ARCHIVO ||',SYSDATE, TO_CHAR(SYSDATE, ''hh:mi:ss''),' || CHR(10);
      SQL_DINAMICO_INSERT               := SQL_DINAMICO_INSERT || 'TO_NUMBER(' || SEC_NUMERO_CARGUE_DIARIO||'),0,0,0,  ''PRELIQ_MFEA''' || CHR(10);
      SQL_DINAMICO_INSERT               := SQL_DINAMICO_INSERT || ',0,NULL)'   || CHR(10);

      EXECUTE IMMEDIATE SQL_DINAMICO_INSERT;
      COMMIT;
    EXCEPTION WHEN OTHERS THEN
      ROLLBACK;
      DBMS_OUTPUT.PUT_LINE('ERROR EN INSERT DE RESUMEN DE CARGUE -'||SQLERRM);
    END;

      SQL_DINAMICO_SELECT := 'SELECT 1  AS  IDPRELIQ, 1 AS IDCARGUE,CODMUNICIPIO,DEPARTAMENTO,MUNICIPIO,CODBENEFICIARIO,NOMBRE1,NOMBRE2,APELLIDO1,APELLIDO2,TIPOID,DOCUMENTO,TELEFONO,CELULAR,DIRECCION,CORREOELECTRONICO,FECHANACIMIENTO,FECHAEXPEDICION,SEXO,VALORTOTAL FROM ' || TABLA_ORIGEN;
      OPEN CUR_STAGE FOR SQL_DINAMICO_SELECT; --EN TIEMPO DE EJECUCIÓN
      LOOP

        FETCH CUR_STAGE INTO TIPO_RECORD;
         EXIT WHEN CUR_STAGE%NOTFOUND;
         EXECUTE IMMEDIATE 'SELECT ' || SEC_ID_TABLA_DE_NEGOCIO || '.NEXTVAL FROM DUAL' INTO  SEC_TABLA_FINAL;

         CADENA_INSERTAR                := SEC_TABLA_FINAL;
         CADENA_INSERTAR                := CADENA_INSERTAR  || ', ' || SEC_RESUMEN_CARGUE;
         CADENA_INSERTAR                := CADENA_INSERTAR  || ', ''' ||NVL(TIPO_RECORD.CODMUNICIPIO,'') || ''',''' || NVL(TIPO_RECORD.DEPARTAMENTO,'') || ''',''' || NVL(TIPO_RECORD.MUNICIPIO,'') || ''',''' || NVL(TIPO_RECORD.CODBENEFICIARIO,'') || ''',''' || NVL(TIPO_RECORD.NOMBRE1,'') || ''',''' || NVL(TIPO_RECORD.NOMBRE2,'') || ''',''' || NVL(TIPO_RECORD.APELLIDO1,'') || ''',''' || NVL(TIPO_RECORD.APELLIDO2,'') || ''',''' || NVL(TIPO_RECORD.TIPOID,'') || ''',' || NVL(TIPO_RECORD.DOCUMENTO,'') || ',' || NVL(TIPO_RECORD.TELEFONO,'') || ',' || NVL(TIPO_RECORD.CELULAR,'') || ',''' || NVL(TIPO_RECORD.DIRECCION,'') || ''',''' || NVL(TIPO_RECORD.CORREOELECTRONICO,'')  || ''',''' || NVL(TIPO_RECORD.FECHANACIMIENTO,'')  || ''',''' || NVL(TIPO_RECORD.FECHAEXPEDICION,'') || ''',''' || NVL(TIPO_RECORD.SEXO,'') || ''',' || NVL(TIPO_RECORD.VALORTOTAL,0);

         --INSERTA DATOS EN SIBO
       BEGIN
         SQL_DINAMICO_INSERT            := 'INSERT INTO '    || TABLA_DESTINO  ||CHR(10);
         SQL_DINAMICO_INSERT            := SQL_DINAMICO_INSERT || ' VALUES('||CHR(10);
         SQL_DINAMICO_INSERT            := SQL_DINAMICO_INSERT || CADENA_INSERTAR||CHR(10);
         SQL_DINAMICO_INSERT            := SQL_DINAMICO_INSERT || ')'||CHR(10);
         --DBMS_OUTPUT.PUT_LINE(SQL_DINAMICO_INSERT);

         EXECUTE IMMEDIATE SQL_DINAMICO_INSERT;
         COMMIT;
       EXCEPTION WHEN OTHERS THEN
     DBMS_OUTPUT.PUT_LINE(SQLERRM);
     END;

      END LOOP;
      CLOSE CUR_STAGE;

  EXCEPTION 
  WHEN MISSING_EXPRESSION THEN
  DBMS_OUTPUT.PUT_LINE('ERROR: DATO OBLIGATORIO NULO EN LA TABLA DESTINO');
  WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('ERROR: '||SQLERRM);
  IF CUR_STAGE%ISOPEN THEN
  CLOSE CUR_STAGE;
  END IF;
END PRC_CARGAR_DATOS_SIBO_DINAMIC;
/